
name: build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      env:
        description: "Environment, 'dev' or 'prod'."
        required: true
      s3_bucket_operations:
        description: "Operations S3 bucket."
        required: true
      ecs_cluster:
        description: "ECS Cluster ARN or name."
        required: true
      ecs_task_definition:
        description: "ECS Task Definition ARN or name."
        required: true
      ecs_task_network_configuration:
        description: "ECS Task network configuration. (ex. 'awsvpcConfiguration={subnets=[subnet-...],securityGroups=[sg-...],assignPublicIp=ENABLED}')"
        required: true
      ecs_task_overrides:
        description: "ECS Task container overrides. (ex. '{ \"containerOverrides\": [ { \"name\": \"dataplatform\", \"command\": [\"alembic\", \"upgrade\", \"head\"] } ] }'"
        required: true

jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # job env variables
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Setup Python.
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install python packages in 'libs' folder.
        working-directory: ${{github.workspace}}
        run: pip install -r requirements.txt -t ./libs

      - name: Create package to be used for Lambda and Glue Jobs, and add lambda files.
        working-directory: ${{github.workspace}}/aws/s3/lambdas
        run: zip -r ${{github.workspace}}/aws/s3/packages/data_platform.zip ./

      - name: Add 'data_platform' folder to package.
        working-directory: ${{github.workspace}}
        run: zip -r ${{github.workspace}}/aws/s3/packages/data_platform.zip ./data_platform/

      - name: Add python libs to package.
        working-directory: ${{github.workspace}}/libs
        run: zip -r ${{github.workspace}}/aws/s3/packages/data_platform.zip ./

      - name: Sync Glue Jobs and package to operations.
        run: aws s3 sync ${{github.workspace}}/aws/s3/ s3://{{github.events.inputs.s3_bucket_operations}}/ --exclude "*/empty"

      - name: Build main container.
        working-directory: ${{github.workspace}}
        run: docker build --tag ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform:main-{{github.events.inputs.env}}-latest -f ./docker/Dockerfile.main .

      - name: Get repository login.
        run: aws ecr get-login-password | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform

      - name: Push main container to repository.
        run: docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform:main-{{github.events.inputs.env}}-latest

      - name: Run main container task to run migrations.
        uses: mbta/actions/run-ecs-task@v1
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_default_region: ${{secrets.AWS_DEFAULT_REGION}}
          ecs_cluster: arn:aws:ecs:${{secrets.AWS_DEFAULT_REGION}}:${{secrets.AWS_ACCOUNT_ID}}:cluster/dataplatform
          ecs_task_definition: arn:aws:ecs:${{secrets.AWS_DEFAULT_REGION}}:${{secrets.AWS_ACCOUNT_ID}}:task-definition/dataplatform-{{github.events.inputs.env}}-main
          ecs_task_network_configuration: {{github.events.inputs.ecs_task_network_configuration}}
          ecs_task_overrides: {{github.events.inputs.ecs_task_overrides}}
