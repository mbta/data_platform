name: Elixir Deploy

permissions:
  id-token: write

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment, 'dev' or 'prod'."
        required: true

jobs:
  deploy_ex_cubic_ingestion:
    name: Deploy ExCubicIngestion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Build container and push to ECR
        uses: mbta/actions/build-push-ecr@v2
        id: build-push
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          docker-repo: ${{secrets.DOCKER_REPO}}
          dockerfile-path: ex_cubic_ingestion
      - name: Update ECS service with new container build
        uses: mbta/actions/deploy-ecs@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          ecs-cluster: dataplatform
          ecs-service: dataplatform-${{github.event.inputs.env}}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
          requires-secrets: false
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          job-status: ${{ job.status }}
          custom-message: "(elixir-${{github.event.inputs.env}})"
